@startuml Chess

class MasterMind {
    + play()
    + isResume()
}
class Game {
    + play()
}
class Attempt {
    + play()
    + result(SecrectCombination)
    + print()
    + isWinner()
}

abstract class Combination {
    + abstract generate()
    + abstract toString()
}
class SecrectCombination {
    + compare(ProposedCombination)
}
class ProposedCombination {
}

class Console {
    + write()
    + readString()
}

enum Color  {
    RED,
    BLUE,
    GREEN,
    YELLOW,
    PINK,
    MAGENTE,
    ORANGE,
    SILVER;
    + valueOf(char)
    + shortName()
    + shortNames()
}

enum Pig {
    WHITE,
    BLACK;
}

MasterMind *--> Game
Game *--> SecrectCombination
Game *--> "1, 10" Attempt 
Combination <|-- SecrectCombination
Combination <|-- ProposedCombination
Attempt *--> ProposedCombination
Attempt ..> SecrectCombination
SecrectCombination ..> ProposedCombination
Combination *--> Color : 4
Attempt *--> Pig : 4

MasterMind ..> Console
Game ..> Console
Attempt ..> Console
SecrectCombination ..> Console
ProposedCombination ..> Console

@enduml
